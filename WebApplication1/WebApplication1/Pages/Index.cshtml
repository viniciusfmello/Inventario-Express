@page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";  
}

<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<link rel="stylesheet" href="~/css/indexcss.css" asp-append-version="true" />
<link rel="" href="~/js/indexjs.js" asp-append-version="true" />



<div class="container mt-4 card-1" id="cards-info">
    <div class="row">
        <!-- Card Produtos -->
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Produtos</h5>
                    <i class="bi bi-boxes"></i>
                    <p class="card-text">Total de produtos: @Model.totalProdutos</p>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Preço total estoque</h5>
                    <i class="bi bi-currency-dollar"></i>
                    <p class="card-text">Preço total: R$ @Model.totalPreco</p>

                </div>
            </div>
        </div>

        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <!-- Coluna do Gráfico -->
                        <div class="col-md-8">
                            <div id="chartdiv"></div>
                        </div>
                        
                        <!-- Coluna da Descrição -->
                        <div class="col-md-4">
                            <h5 class="card-title">Análise de Vendas</h5>
                            <p class="card-text">
                                Este gráfico representa a tendência de vendas ao longo do ano, permitindo uma visualização clara do desempenho mensal. Use estas informações para planejar melhor suas estratégias de estoque.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
       
    </div>


    
</div>
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<script  charset="utf-8">
    am5.ready(function () {

        // Create root element
        var root = am5.Root.new("chartdiv");

        // Set themes
        root.setThemes([
            am5themes_Animated.new(root)
        ]);

        // Create chart
        var chart = root.container.children.push(am5xy.XYChart.new(root, {
            panX: true,
            panY: true,
            wheelX: "panX",
            wheelY: "zoomX",
            pinchZoomX: true,
            paddingLeft: 0,
            paddingRight: 1
        }));

        // Add cursor
        var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
        cursor.lineY.set("visible", false);


        // Create axes
        var xRenderer = am5xy.AxisRendererX.new(root, {
            minGridDistance: 30,
            minorGridEnabled: true
        });

        xRenderer.labels.template.setAll({
            rotation: -90,
            centerY: am5.p50,
            centerX: am5.p100,
            paddingRight: 15
        });

        xRenderer.grid.template.setAll({
            location: 1
        })

        var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
            maxDeviation: 0.3,
            categoryField: "country",
            renderer: xRenderer,
            tooltip: am5.Tooltip.new(root, {})
        }));

        var yRenderer = am5xy.AxisRendererY.new(root, {
            strokeOpacity: 0.1
        })

        var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
            maxDeviation: 0.3,
            renderer: yRenderer
        }));


        var series = chart.series.push(am5xy.ColumnSeries.new(root, {
            name: "Series 1",
            xAxis: xAxis,
            yAxis: yAxis,
            valueYField: "value",
            sequencedInterpolation: true,
            categoryXField: "country",
            tooltip: am5.Tooltip.new(root, {
                labelText: "{valueY}"
            })
        }));

        series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5, strokeOpacity: 0 });
        series.columns.template.adapters.add("fill", function (fill, target) {
            return chart.get("colors").getIndex(series.columns.indexOf(target));
        });

        series.columns.template.adapters.add("stroke", function (stroke, target) {
            return chart.get("colors").getIndex(series.columns.indexOf(target));
        });



        var data = [
            @for (int i = 0; i < Model.listaProdutos.Count; i++)
            {
                <text>{
                    country: '@Model.listaProdutos[i].Nome',
                    value: @Model.listaProdutos[i].Quantidade
                }</text>
                @(i < Model.listaProdutos.Count - 1 ? "," : "")
            }
        ];

        xAxis.data.setAll(data);
        series.data.setAll(data);


        // Make stuff animate on load
        // https://www.amcharts.com/docs/v5/concepts/animations/
        series.appear(1000);
        chart.appear(1000, 100);

    }); // end am5.ready()



</script>
